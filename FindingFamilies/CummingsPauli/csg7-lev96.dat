// list of all congruence groups with genus  7
// with  96 <= level < 104
//
// by c cummins and s pauli
load "csg7-lev88.dat";
L cat:=
[ PowerStructure(Rec) |
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, 
        1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, 1, -2, -2, -2, -2, 1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 
        -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 
        1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, 
        -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, 1, 2, 1
        ]
    ], level := 96, genus := 7, index := 144, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 4193, 4197, 4198, 5124, 5125, 5137, 5138, 
    5139, 5140, 5877, 5887, 5888, 5890, 5891, 5892, 6798, 6799, 6819, 7552 ], 
    supergroups := [ IntegerRing() | 121 ], name := "96A7", label := "A", order 
    := 4096, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(96)) |
        [ IntegerRing(96) | 1, 0, 48, 1 ],
        [ IntegerRing(96) | 13, 20, 26, 77 ],
        [ IntegerRing(96) | 25, 0, 72, 73 ],
        [ IntegerRing(96) | 25, 20, 38, 65 ],
        [ IntegerRing(96) | 41, 72, 12, 89 ],
        [ IntegerRing(96) | 49, 0, 48, 49 ],
        [ IntegerRing(96) | 49, 48, 24, 49 ],
        [ IntegerRing(96) | 51, 10, 95, 45 ],
        [ IntegerRing(96) | 57, 20, 94, 33 ],
        [ IntegerRing(96) | 65, 0, 0, 65 ],
        [ IntegerRing(96) | 89, 20, 62, 1 ],
        [ IntegerRing(96) | 95, 0, 0, 95 ]
    ], cusps := [ IntegerRing() | 48, 96 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 2, 2, 2, 2, 4, 4,
    4, 4, 4, 4 ], special_name := [], special_name_html := [], direct_subgroups 
    := [ IntegerRing() | 4193, 4197, 4198, 5124, 5125, 5137, 5138, 5139, 5140, 
    5877, 5887, 5888, 5890, 5891, 5892, 6798, 6799, 6819, 7552 ], 
    direct_supergroups := [ IntegerRing() | 121 ], length := 36, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 4 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 6 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 21 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 22 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 25 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 37 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 39 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 40 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 53 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 54 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43, 57 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 8 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 11 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 15 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 16 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 23 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 28 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 39 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 40 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 43 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 44 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 48 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20, 63 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 5 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 7 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 9 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 21 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 23 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 25 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 37 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 39 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 41 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 52 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 54 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50, 56 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 43 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 20 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 50 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, 
        -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2,
        -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, 1 
        ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2,
        -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 
        ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2,
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ]
    ], level := 96, genus := 7, index := 192, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3576, 5142, 5144, 6829, 6828 ], supergroups 
    := [ IntegerRing() | 644 ], name := "96B7", label := "B", order := 3072, 
    GLZConj := 1, matgens := [ PowerSequence(IntegerRing(96)) |
        [ IntegerRing(96) | 1, 0, 32, 1 ],
        [ IntegerRing(96) | 1, 48, 48, 1 ],
        [ IntegerRing(96) | 16, 93, 75, 94 ],
        [ IntegerRing(96) | 19, 66, 30, 79 ],
        [ IntegerRing(96) | 22, 39, 57, 88 ],
        [ IntegerRing(96) | 29, 6, 42, 65 ],
        [ IntegerRing(96) | 31, 54, 90, 67 ],
        [ IntegerRing(96) | 49, 48, 48, 49 ],
        [ IntegerRing(96) | 61, 6, 90, 1 ],
        [ IntegerRing(96) | 61, 12, 84, 37 ],
        [ IntegerRing(96) | 73, 24, 72, 25 ]
    ], cusps := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 
    3, 8, 24, 32, 96 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
    2, 2, 2, 2, 4 ], special_name := [], special_name_html := [], 
    direct_subgroups := [ IntegerRing() | 3576, 5142, 5144, 6829, 6828 ], 
    direct_supergroups := [ IntegerRing() | 644 ], length := 24, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 3, 6, 3, 3, 14 ],
        [ IntegerRing() | 480, 4, 6, 8, 9, 35, 15 ],
        [ IntegerRing() | 576, 2, 6, 11, 5, 11, 5 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 3, 6, 3, 3 ],
        [ IntegerRing() | 480, 4, 6, 8, 9, 35 ],
        [ IntegerRing() | 576, 2, 6, 11, 5, 11 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2,
        -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, 
        -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2,
        -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, 1 
        ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 
        ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ]
    ], level := 96, genus := 7, index := 192, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3576, 5143, 5145, 6095, 6096, 6830, 6831 ], 
    supergroups := [ IntegerRing() | 119, 644 ], name := "96C7", label := "C", 
    order := 3072, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(96)) |
        [ IntegerRing(96) | 1, 0, 32, 1 ],
        [ IntegerRing(96) | 1, 48, 48, 1 ],
        [ IntegerRing(96) | 19, 66, 30, 79 ],
        [ IntegerRing(96) | 22, 39, 57, 40 ],
        [ IntegerRing(96) | 31, 54, 90, 67 ],
        [ IntegerRing(96) | 49, 48, 48, 49 ],
        [ IntegerRing(96) | 61, 6, 42, 1 ],
        [ IntegerRing(96) | 61, 12, 84, 37 ],
        [ IntegerRing(96) | 65, 0, 0, 65 ],
        [ IntegerRing(96) | 73, 24, 72, 25 ],
        [ IntegerRing(96) | 85, 72, 0, 61 ]
    ], cusps := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 
    3, 8, 24, 32, 96 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
    2, 2, 2, 2, 4 ], special_name := [], special_name_html := [], 
    direct_subgroups := [ IntegerRing() | 3576, 5143, 5145, 6095, 6096, 6830, 
    6831 ], direct_supergroups := [ IntegerRing() | 119, 644 ], length := 24, 
    treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 3, 6, 3, 3, 19 ],
        [ IntegerRing() | 384, 4, 5, 4, 6, 15, 1 ],
        [ IntegerRing() | 480, 4, 6, 8, 9, 35, 5 ],
        [ IntegerRing() | 480, 7, 7, 6, 8, 14, 3 ],
        [ IntegerRing() | 576, 2, 6, 11, 5, 11, 31 ],
        [ IntegerRing() | 576, 5, 5, 7, 15, 14, 2 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 3, 6, 3, 3 ],
        [ IntegerRing() | 384, 4, 5, 4, 6, 15 ],
        [ IntegerRing() | 480, 4, 6, 8, 9, 35 ],
        [ IntegerRing() | 480, 7, 7, 6, 8, 14 ],
        [ IntegerRing() | 576, 2, 6, 11, 5, 11 ],
        [ IntegerRing() | 576, 5, 5, 7, 15, 14 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, 2, 1, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 
        2, 2, -1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
        1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, 
        -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, -2, -2, 1, 2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 
        1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 
        2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, -2, -2, -1, 2, 2, -1, -2, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1,
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -1, -2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, -2, -2, 1, 2, 2, -1 ],
        [ IntegerRing() | 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 
        1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 
        -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 1, -2, -2, 
        -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, 
        -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, 
        -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, -2, -1, -2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
        2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 
        2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, 
        -2, 1, 2, 2, -1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 
        1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, -2, -2, -1, 2, 2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1,
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, 
        -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -1, -2, 
        -2, 1, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1 
        ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, 2, 1, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 
        2, 2, -1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1,
        1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, 
        -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2,
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, 1, 2, 2, 1, 2, 
        1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, 
        -2, 1, 2, 2, -1, -2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, 2, 1, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 
        1, 2, 2, -1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
        1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, -1, -2, -1, -2, -1, -1, -1, -2,
        -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, 
        -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2 ],
        [ IntegerRing() | 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 
        2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 
        1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 
        2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 
        1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, -2, -2, -1, 2, 2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, 
        -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, 
        -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1,
        -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, 
        -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, 
        -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, 
        -2, -1, -2, -2, -1, -2, -1, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -1, -2, 
        1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 
        2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, -2, -2, 1, 2, 2, -1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 
        1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 
        2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, -1, 2, 1, 2, 
        2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 
        2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 
        2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 
        2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 
        1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 
        2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 
        1, 1, 1, 2, 1, 2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, 
        -1, -2, 1, -2, -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2,
        -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, 
        -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, 
        -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, 
        -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, 
        2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -1, -2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 
        1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 
        2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 
        1, 1, 2, 1, -2, -2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 
        2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 
        2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 
        2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 
        2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 
        1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, -2, -2, 1, 2, 2, -1, -2, 
        -2, -1, 2, 2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, 
        -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, 
        -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, -2, -1, -2, -1, -2, -1, 
        -2, -1, -1, -1, -2, -1, -2, -2, -1, -2, -1, -1, -2, -1, -2, -2, -1, -2, 
        -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -1, -1, -2, -1, -2, -2, -1, 
        -2, -1, -2, -1, -2, -1, -1, -1, -2, -1, -2, -2, -1, -2 ]
    ], level := 97, genus := 7, index := 98, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3577, 4331, 4332, 6839, 7358, 7797, 7884 ], 
    supergroups := [ IntegerRing() | 1 ], name := "97A7", label := "A", order :=
    9312, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(97)) |
        [ IntegerRing(97) | 16, 70, 29, 36 ],
        [ IntegerRing(97) | 33, 55, 2, 21 ],
        [ IntegerRing(97) | 48, 95, 36, 45 ],
        [ IntegerRing(97) | 70, 71, 89, 21 ],
        [ IntegerRing(97) | 96, 0, 0, 96 ]
    ], cusps := [ IntegerRing() | 1, 97 ], c2 := [ IntegerRing() | 1, 1, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ 
    IntegerRing() | 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 1, 1, 96
    ], special_name := [ Strings() | "\overline\Gamma_0(97)" ], 
    special_name_html := [ Strings() | "&Gamma;<sub>0</sub>(97)" ], 
    direct_subgroups := [ IntegerRing() | 3577, 4331, 4332, 6839, 7358, 7797, 
    7884 ], direct_supergroups := [ IntegerRing() | 1 ], length := 98, treename 
    := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 388, 5 ],
        [ IntegerRing() | 485, 5 ],
        [ IntegerRing() | 582, 5 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2,
        2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 
        -2, -2, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2,
        2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2,
        -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2,
        2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 
        2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2,
        -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2,
        2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 
        2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2,
        -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2,
        2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2,
        2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2,
        -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2,
        2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2,
        2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2,
        -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2,
        2, -1, -1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, -1, -1, 2, 2, 
        2, 2, 2, 2, 1, -2, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, 1 ]
    ], level := 98, genus := 7, index := 168, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 5147, 5278, 5926, 7029 ], supergroups := [ 
    IntegerRing() | 3, 189, 283 ], name := "98A7", label := "A", order := 4116, 
    GLZConj := 1, matgens := [ PowerSequence(IntegerRing(98)) |
        [ IntegerRing(98) | 1, 0, 49, 1 ],
        [ IntegerRing(98) | 15, 0, 14, 85 ],
        [ IntegerRing(98) | 27, 88, 48, 73 ],
        [ IntegerRing(98) | 51, 28, 62, 11 ],
        [ IntegerRing(98) | 85, 28, 42, 15 ],
        [ IntegerRing(98) | 97, 0, 0, 97 ]
    ], cusps := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 49, 
    98 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ 
    IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 1, 1, 1, 1, 1, 1,
    6, 6, 6, 6, 6, 6, 42, 42, 42 ], special_name := [ Strings() | 
    "\overline\Gamma_0(98)" ], special_name_html := [ Strings() | 
    "&Gamma;<sub>0</sub>(98)" ], direct_subgroups := [ IntegerRing() | 5147, 
    5278, 5926, 7029 ], direct_supergroups := [ IntegerRing() | 189, 283 ], 
    length := 168, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 392, 1, 3, 5 ],
        [ IntegerRing() | 392, 1, 5, 2 ],
        [ IntegerRing() | 490, 1, 3, 7 ],
        [ IntegerRing() | 490, 1, 7, 3 ],
        [ IntegerRing() | 588, 1, 4, 9 ],
        [ IntegerRing() | 588, 1, 9, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 392, 1, 3 ],
        [ IntegerRing() | 392, 1, 5 ],
        [ IntegerRing() | 300, 7 ],
        [ IntegerRing() | 490, 1, 3 ],
        [ IntegerRing() | 490, 1, 7 ],
        [ IntegerRing() | 588, 1, 4 ],
        [ IntegerRing() | 588, 1, 9 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, 2, 2, 2, 2, -1, 2, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, 
        -2, 1, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 1,
        -2, -2, 1, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 1 ]
    ], level := 100, genus := 7, index := 120, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3586, 4204, 4205, 5281, 5280, 6843 ], 
    supergroups := [ IntegerRing() | 113, 234 ], name := "100A7", label := "A", 
    order := 6000, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(100)) |
        [ IntegerRing(100) | 1, 50, 25, 51 ],
        [ IntegerRing(100) | 5, 92, 52, 97 ],
        [ IntegerRing(100) | 41, 40, 0, 61 ],
        [ IntegerRing(100) | 51, 0, 0, 51 ],
        [ IntegerRing(100) | 61, 0, 60, 41 ],
        [ IntegerRing(100) | 76, 25, 75, 51 ],
        [ IntegerRing(100) | 79, 40, 40, 19 ],
        [ IntegerRing(100) | 79, 66, 43, 41 ]
    ], cusps := [ IntegerRing() | 4, 4, 4, 4, 4, 100 ], c2 := [ IntegerRing() | 
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 2, 2, 8, 8, 8,
    8, 40, 40 ], special_name := [], special_name_html := [], direct_subgroups 
    := [ IntegerRing() | 3586, 4204, 4205, 5281, 5280, 6843 ], 
    direct_supergroups := [ IntegerRing() | 113, 234 ], length := 120, treename 
    := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 1, 7 ],
        [ IntegerRing() | 300, 2, 6, 1 ],
        [ IntegerRing() | 400, 2, 1, 5 ],
        [ IntegerRing() | 400, 2, 6, 1 ],
        [ IntegerRing() | 500, 2, 1, 5 ],
        [ IntegerRing() | 500, 2, 5, 1 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 1 ],
        [ IntegerRing() | 300, 2, 6 ],
        [ IntegerRing() | 400, 2, 1 ],
        [ IntegerRing() | 400, 2, 6 ],
        [ IntegerRing() | 500, 2, 1 ],
        [ IntegerRing() | 500, 2, 5 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 1, -2, -2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 1,
        1, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 1, 2, 2, 2, 2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, -2, -2, 1, 2 ]
    ], level := 100, genus := 7, index := 120, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 4203, 6844 ], supergroups := [ IntegerRing() 
    | 235, 423 ], name := "100B7", label := "B", order := 6000, GLZConj := 2, 
    matgens := [ PowerSequence(IntegerRing(100)) |
        [ IntegerRing(100) | 1, 50, 50, 1 ],
        [ IntegerRing(100) | 21, 20, 0, 81 ],
        [ IntegerRing(100) | 26, 25, 25, 1 ],
        [ IntegerRing(100) | 41, 20, 20, 61 ],
        [ IntegerRing(100) | 49, 70, 80, 49 ],
        [ IntegerRing(100) | 49, 84, 44, 53 ],
        [ IntegerRing(100) | 51, 50, 0, 51 ],
        [ IntegerRing(100) | 71, 84, 77, 39 ]
    ], cusps := [ IntegerRing() | 4, 4, 4, 4, 4, 100 ], c2 := [ IntegerRing() | 
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 8, 8, 40 ], 
    special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 4203, 6844 ], direct_supergroups := [ IntegerRing() | 235, 
    423 ], length := 30, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 6, 8, 8 ],
        [ IntegerRing() | 300, 2, 6, 8, 9 ],
        [ IntegerRing() | 300, 2, 13, 11, 8 ],
        [ IntegerRing() | 400, 2, 6, 7, 5 ],
        [ IntegerRing() | 400, 2, 6, 7, 7 ],
        [ IntegerRing() | 400, 2, 11, 9, 5 ],
        [ IntegerRing() | 500, 2, 5, 10, 10 ],
        [ IntegerRing() | 500, 2, 5, 10, 12 ],
        [ IntegerRing() | 500, 2, 11, 9, 5 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 6, 8 ],
        [ IntegerRing() | 300, 2, 6, 8 ],
        [ IntegerRing() | 300, 2, 13, 11 ],
        [ IntegerRing() | 400, 2, 6, 7 ],
        [ IntegerRing() | 400, 2, 6, 7 ],
        [ IntegerRing() | 400, 2, 11, 9 ],
        [ IntegerRing() | 500, 2, 5, 10 ],
        [ IntegerRing() | 500, 2, 5, 10 ],
        [ IntegerRing() | 500, 2, 11, 9 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, 2, 2, 2, 2, -1, 2, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2,
        2, 2, 2, 1 ],
        [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
        1 ]
    ], level := 100, genus := 7, index := 180, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3587, 5942, 5944, 6107, 6106 ], supergroups 
    := [ IntegerRing() | 236, 424 ], name := "100C7", label := "C", order := 
    4000, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(100)) |
        [ IntegerRing(100) | 1, 0, 50, 1 ],
        [ IntegerRing(100) | 5, 32, 12, 97 ],
        [ IntegerRing(100) | 9, 8, 36, 21 ],
        [ IntegerRing(100) | 21, 20, 0, 81 ],
        [ IntegerRing(100) | 21, 60, 60, 81 ],
        [ IntegerRing(100) | 51, 0, 50, 51 ],
        [ IntegerRing(100) | 69, 40, 80, 29 ],
        [ IntegerRing(100) | 69, 76, 83, 61 ]
    ], cusps := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 
    25, 25, 100 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 20, 20, 20 ], 
    special_name := [ Strings() | "\overline\Gamma_0(100)" ], special_name_html 
    := [ Strings() | "&Gamma;<sub>0</sub>(100)" ], direct_subgroups := [ 
    IntegerRing() | 3587, 5942, 5944, 6107, 6106 ], direct_supergroups := [ 
    IntegerRing() | 236, 424 ], length := 90, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 6, 6, 11 ],
        [ IntegerRing() | 300, 2, 10, 10, 6 ],
        [ IntegerRing() | 400, 2, 6, 4, 3 ],
        [ IntegerRing() | 400, 2, 8, 11, 6 ],
        [ IntegerRing() | 500, 2, 5, 9, 11 ],
        [ IntegerRing() | 500, 2, 8, 7, 4 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 6, 6 ],
        [ IntegerRing() | 300, 2, 10, 10 ],
        [ IntegerRing() | 400, 2, 6, 4 ],
        [ IntegerRing() | 400, 2, 8, 11 ],
        [ IntegerRing() | 500, 2, 5, 9 ],
        [ IntegerRing() | 500, 2, 8, 7 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, -2, -2, 
        -1, -1, -2, -2, 1, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, 
        -2, -2, -1, -1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, 
        -1, -2, -2, 1, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, 
        -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 
        1, -2, -2, 1, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, 
        -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, -2, -2, 1, 1 ]
    ], level := 102, genus := 7, index := 108, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3589, 4207, 4210, 5161, 5159, 7580, 7890 ], 
    supergroups := [ IntegerRing() | 5, 650 ], name := "102A7", label := "A", 
    order := 6528, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(102)) |
        [ IntegerRing(102) | 1, 0, 54, 1 ],
        [ IntegerRing(102) | 1, 34, 34, 35 ],
        [ IntegerRing(102) | 35, 0, 0, 35 ],
        [ IntegerRing(102) | 52, 51, 51, 1 ],
        [ IntegerRing(102) | 55, 0, 48, 13 ],
        [ IntegerRing(102) | 61, 85, 22, 29 ],
        [ IntegerRing(102) | 67, 0, 0, 67 ],
        [ IntegerRing(102) | 69, 34, 17, 69 ],
        [ IntegerRing(102) | 83, 0, 42, 59 ]
    ], cusps := [ IntegerRing() | 6, 102 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc :=
    [ IntegerRing() | 1, 1, 2, 2, 16, 32 ], special_name := [], 
    special_name_html := [], direct_subgroups := [ IntegerRing() | 3589, 4207, 
    4210, 5161, 5159, 7580, 7890 ], direct_supergroups := [ IntegerRing() | 650 
    ], length := 54, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 306, 5, 4, 10 ],
        [ IntegerRing() | 306, 5, 4, 18 ],
        [ IntegerRing() | 306, 5, 4, 20 ],
        [ IntegerRing() | 408, 5, 4, 6 ],
        [ IntegerRing() | 408, 5, 4, 8 ],
        [ IntegerRing() | 408, 5, 4, 16 ],
        [ IntegerRing() | 510, 5, 6, 6 ],
        [ IntegerRing() | 510, 5, 6, 7 ],
        [ IntegerRing() | 510, 5, 6, 9 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 306, 5, 4 ],
        [ IntegerRing() | 306, 5, 4 ],
        [ IntegerRing() | 306, 5, 4 ],
        [ IntegerRing() | 300, 6 ],
        [ IntegerRing() | 408, 5, 4 ],
        [ IntegerRing() | 408, 5, 4 ],
        [ IntegerRing() | 408, 5, 4 ],
        [ IntegerRing() | 510, 5, 6 ],
        [ IntegerRing() | 510, 5, 6 ],
        [ IntegerRing() | 510, 5, 6 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, -2, -2, 
        -1, -1, -2, -2, 1, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, 
        -2, -2, -1, -1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, 
        -1, -2, -2, 1, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, 
        -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 
        1, -2, -2, 1, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -1, -2, -2, 1, -2, -2, -1, -2, -2, 
        -1, -2, -2, 1, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, 1, -2, -2, -1, 
        -2, -2, -1, -2, -2, 1, -2, -2, -1, -1, -2, -2, 1, -2, -2, 1, 1 ]
    ], level := 102, genus := 7, index := 108, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3589, 4208, 4210, 5160, 5162, 7581, 7891 ], 
    supergroups := [ IntegerRing() | 5, 25, 650 ], name := "102B7", label := 
    "B", order := 6528, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(102)) |
        [ IntegerRing(102) | 1, 0, 54, 1 ],
        [ IntegerRing(102) | 1, 68, 68, 35 ],
        [ IntegerRing(102) | 35, 0, 0, 35 ],
        [ IntegerRing(102) | 52, 51, 51, 1 ],
        [ IntegerRing(102) | 55, 0, 48, 13 ],
        [ IntegerRing(102) | 61, 85, 22, 29 ],
        [ IntegerRing(102) | 67, 0, 0, 67 ],
        [ IntegerRing(102) | 69, 34, 17, 69 ],
        [ IntegerRing(102) | 83, 0, 42, 59 ]
    ], cusps := [ IntegerRing() | 6, 102 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc :=
    [ IntegerRing() | 1, 1, 2, 2, 16, 32 ], special_name := [], 
    special_name_html := [], direct_subgroups := [ IntegerRing() | 3589, 4208, 
    4210, 5160, 5162, 7581, 7891 ], direct_supergroups := [ IntegerRing() | 25, 
    650 ], length := 54, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 306, 5, 4, 12 ],
        [ IntegerRing() | 306, 5, 4, 14 ],
        [ IntegerRing() | 306, 5, 4, 16 ],
        [ IntegerRing() | 408, 5, 4, 5 ],
        [ IntegerRing() | 408, 5, 4, 7 ],
        [ IntegerRing() | 408, 5, 4, 17 ],
        [ IntegerRing() | 510, 5, 6, 14 ],
        [ IntegerRing() | 510, 5, 6, 17 ],
        [ IntegerRing() | 510, 5, 6, 19 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 306, 5, 4 ],
        [ IntegerRing() | 306, 5, 4 ],
        [ IntegerRing() | 306, 5, 4 ],
        [ IntegerRing() | 300, 6, 7 ],
        [ IntegerRing() | 300, 6 ],
        [ IntegerRing() | 408, 5, 4 ],
        [ IntegerRing() | 408, 5, 4 ],
        [ IntegerRing() | 408, 5, 4 ],
        [ IntegerRing() | 510, 5, 6 ],
        [ IntegerRing() | 510, 5, 6 ],
        [ IntegerRing() | 510, 5, 6 ]
    ]>
]
;
