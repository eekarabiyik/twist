// list of all congruence groups with genus  4
// with  48 <= level < 56
//
// by c cummins and s pauli
load "csg4-lev40.dat";
L cat:=
[ PowerStructure(Rec) |
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 
        ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, 2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 
        1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        1, 1, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 
        1, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2,
        -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ]
    ], level := 48, genus := 4, index := 64, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1540, 3108, 3712, 3993, 4281, 4575, 4810, 
    8054 ], supergroups := [ IntegerRing() | 96, 362 ], name := "48A4", label :=
    "A", order := 1152, GLZConj := 2, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 32, 1 ],
        [ IntegerRing(48) | 1, 24, 24, 1 ],
        [ IntegerRing(48) | 16, 39, 9, 4 ],
        [ IntegerRing(48) | 17, 0, 32, 17 ],
        [ IntegerRing(48) | 25, 24, 0, 25 ],
        [ IntegerRing(48) | 25, 36, 36, 25 ],
        [ IntegerRing(48) | 31, 12, 36, 31 ],
        [ IntegerRing(48) | 34, 3, 3, 13 ],
        [ IntegerRing(48) | 37, 12, 24, 13 ]
    ], cusps := [ IntegerRing() | 16, 48 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 8, 8, 8, 8, 16, 16 
    ], special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 1540, 3108, 3712, 3993, 4281, 4575, 4810, 8054 ], 
    direct_supergroups := [ IntegerRing() | 96, 362 ], length := 32, treename :=
    [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 1, 5, 5 ],
        [ IntegerRing() | 384, 1, 1, 5, 9 ],
        [ IntegerRing() | 384, 2, 5, 5, 1 ],
        [ IntegerRing() | 432, 2, 1, 7, 7 ],
        [ IntegerRing() | 432, 2, 1, 7, 12 ],
        [ IntegerRing() | 432, 3, 6, 6, 2 ],
        [ IntegerRing() | 480, 3, 4, 7, 10 ],
        [ IntegerRing() | 480, 3, 4, 7, 13 ],
        [ IntegerRing() | 480, 3, 8, 8, 4 ],
        [ IntegerRing() | 576, 2, 1, 9, 9 ],
        [ IntegerRing() | 576, 2, 1, 9, 11 ],
        [ IntegerRing() | 576, 3, 6, 6, 2 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 1, 5 ],
        [ IntegerRing() | 384, 1, 1, 5 ],
        [ IntegerRing() | 384, 2, 5, 5 ],
        [ IntegerRing() | 432, 2, 1, 7 ],
        [ IntegerRing() | 432, 2, 1, 7 ],
        [ IntegerRing() | 432, 3, 6, 6 ],
        [ IntegerRing() | 480, 3, 4, 7 ],
        [ IntegerRing() | 480, 3, 4, 7 ],
        [ IntegerRing() | 480, 3, 8, 8 ],
        [ IntegerRing() | 576, 2, 1, 9 ],
        [ IntegerRing() | 576, 2, 1, 9 ],
        [ IntegerRing() | 576, 3, 6, 6 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, 
        -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 
        ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1546, 1789, 1794, 1884, 1885, 2107, 2112, 
    2265, 2271, 2506, 2507, 4576 ], supergroups := [ IntegerRing() | 98, 363 ], 
    name := "48B4", label := "B", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 12, 1 ],
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 1, 16, 16, 17 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 0, 6, 17 ],
        [ IntegerRing(48) | 17, 16, 16, 1 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 33, 16, 35, 33 ],
        [ IntegerRing(48) | 37, 0, 36, 13 ],
        [ IntegerRing(48) | 47, 0, 0, 47 ]
    ], cusps := [ IntegerRing() | 3, 3, 3, 3, 12, 48 ], c2 := [ IntegerRing() | 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 1, 2 ], special_name := [], special_name_html := 
    [], direct_subgroups := [ IntegerRing() | 1546, 1789, 1794, 1884, 1885, 
    2107, 2112, 2265, 2271, 2506, 2507, 4576 ], direct_supergroups := [ 
    IntegerRing() | 98, 363 ], length := 6, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13, 50 ],
        [ IntegerRing() | 384, 4, 5, 4, 6, 2 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 36 ],
        [ IntegerRing() | 432, 5, 5, 4, 15, 3 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 21 ],
        [ IntegerRing() | 480, 7, 7, 6, 8, 5 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 13 ],
        [ IntegerRing() | 576, 5, 5, 7, 15, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 4, 5, 4, 6 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 5, 5, 4, 15 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 7, 7, 6, 8 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 5, 5, 7, 15 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, 1,
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -2, -2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2,
        -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, -2,
        -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 
        1, -2, -2, 1, -2, -2, 1, -2, -2 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1542, 1562, 2117, 2118, 2130, 2131, 2134, 
    2137, 2683, 2685, 2687, 3109, 4580 ], supergroups := [ IntegerRing() | 111 
    ], name := "48C4", label := "C", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 13, 20, 38, 29 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 32, 32, 1 ],
        [ IntegerRing(48) | 23, 0, 24, 23 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 25, 4, 46, 17 ],
        [ IntegerRing(48) | 25, 20, 2, 17 ],
        [ IntegerRing(48) | 39, 34, 35, 33 ],
        [ IntegerRing(48) | 41, 24, 36, 41 ]
    ], cusps := [ IntegerRing() | 24, 48 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 2, 2, 2 ], special_name := [], special_name_html :=
    [], direct_subgroups := [ IntegerRing() | 1542, 1562, 2117, 2118, 2130, 
    2131, 2134, 2137, 2683, 2685, 2687, 3109, 4580 ], direct_supergroups := [ 
    IntegerRing() | 111 ], length := 9, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 21, 6 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 21, 36 ],
        [ IntegerRing() | 432, 4, 4, 14, 4, 8 ],
        [ IntegerRing() | 432, 4, 4, 14, 4, 25 ],
        [ IntegerRing() | 432, 4, 4, 14, 4, 56 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 39 ],
        [ IntegerRing() | 480, 6, 5, 14, 8, 47 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 52 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 54 ],
        [ IntegerRing() | 576, 4, 3, 5, 21, 56 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 21 ],
        [ IntegerRing() | 384, 3, 2, 9, 21 ],
        [ IntegerRing() | 384, 3, 2, 9, 21 ],
        [ IntegerRing() | 432, 4, 4, 14, 4 ],
        [ IntegerRing() | 432, 4, 4, 14, 4 ],
        [ IntegerRing() | 432, 4, 4, 14, 4 ],
        [ IntegerRing() | 480, 6, 5, 14, 8 ],
        [ IntegerRing() | 480, 6, 5, 14, 8 ],
        [ IntegerRing() | 480, 6, 5, 14, 8 ],
        [ IntegerRing() | 576, 4, 3, 5, 21 ],
        [ IntegerRing() | 576, 4, 3, 5, 21 ],
        [ IntegerRing() | 576, 4, 3, 5, 21 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, 
        1, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 
        ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1553, 1787, 1789, 1795, 1797, 2108, 2122, 
    4578 ], supergroups := [ IntegerRing() | 99, 363 ], name := "48D4", label :=
    "D", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 12, 1 ],
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 1, 16, 16, 17 ],
        [ IntegerRing(48) | 13, 24, 12, 37 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 0, 6, 17 ],
        [ IntegerRing(48) | 17, 16, 16, 1 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 33, 16, 35, 33 ],
        [ IntegerRing(48) | 47, 0, 0, 47 ]
    ], cusps := [ IntegerRing() | 3, 3, 6, 6, 6, 48 ], c2 := [ IntegerRing() | 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 1, 2, 2, 4 ], special_name := [], special_name_html
    := [], direct_subgroups := [ IntegerRing() | 1553, 1787, 1789, 1795, 1797, 
    2108, 2122, 4578 ], direct_supergroups := [ IntegerRing() | 99, 363 ], 
    length := 12, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13, 26 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 27 ],
        [ IntegerRing() | 384, 4, 5, 4, 8, 2 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 7 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 58 ],
        [ IntegerRing() | 432, 5, 5, 4, 4, 3 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 14 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 37 ],
        [ IntegerRing() | 480, 7, 7, 6, 9, 5 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 4 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 18 ],
        [ IntegerRing() | 576, 5, 5, 7, 12, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 4, 5, 4, 8 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 5, 5, 4, 4 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 7, 7, 6, 9 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 5, 5, 7, 12 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, 
        1, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 1, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, 
        -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2,
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1544, 1799, 1801, 2125, 2127, 2432, 2434, 
    2508, 2509, 4282 ], supergroups := [ IntegerRing() | 206, 252 ], name := 
    "48E4", label := "E", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 1, 32, 32, 17 ],
        [ IntegerRing(48) | 3, 46, 23, 33 ],
        [ IntegerRing(48) | 5, 24, 24, 29 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 0, 36, 17 ],
        [ IntegerRing(48) | 17, 32, 32, 1 ],
        [ IntegerRing(48) | 25, 0, 0, 25 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 35, 24, 36, 11 ],
        [ IntegerRing(48) | 35, 38, 29, 37 ]
    ], cusps := [ IntegerRing() | 12, 12, 48 ], c2 := [ IntegerRing() | 1, 1, 1,
    1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 2, 4, 4 ], special_name := [], special_name_html := 
    [], direct_subgroups := [ IntegerRing() | 1544, 1799, 1801, 2125, 2127, 
    2432, 2434, 2508, 2509, 4282 ], direct_supergroups := [ IntegerRing() | 206,
    252 ], length := 12, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 9, 5 ],
        [ IntegerRing() | 384, 3, 2, 9, 9, 21 ],
        [ IntegerRing() | 384, 4, 3, 6, 6, 2 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 10 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 26 ],
        [ IntegerRing() | 432, 5, 6, 7, 4, 3 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 29 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 33 ],
        [ IntegerRing() | 480, 7, 8, 6, 9, 5 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 8 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 24 ],
        [ IntegerRing() | 576, 5, 6, 4, 4, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 4, 3, 6, 6 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 5, 6, 7, 4 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 7, 8, 6, 9 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 5, 6, 4, 4 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2,
        -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, 
        -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 
        ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2,
        -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1545, 1546, 1793, 1795, 1809, 2111, 2113, 
    2133, 4577, 4581 ], supergroups := [ IntegerRing() | 363 ], name := "48F4", 
    label := "F", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 12, 1 ],
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 0, 6, 17 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 25, 40, 40, 41 ],
        [ IntegerRing(48) | 33, 16, 35, 33 ],
        [ IntegerRing(48) | 37, 0, 36, 13 ],
        [ IntegerRing(48) | 41, 40, 40, 25 ],
        [ IntegerRing(48) | 47, 0, 0, 47 ]
    ], cusps := [ IntegerRing() | 3, 3, 3, 3, 12, 48 ], c2 := [ IntegerRing() | 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 1, 2, 2, 2, 2, 2, 4 ], special_name := [], 
    special_name_html := [], direct_subgroups := [ IntegerRing() | 1545, 1546, 
    1793, 1795, 1809, 2111, 2113, 2133, 4577, 4581 ], direct_supergroups := [ 
    IntegerRing() | 363 ], length := 18, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13, 52 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 55 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 57 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 21 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 53 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 66 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 20 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 39 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 42 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 5 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 9 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 17 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, 
        1, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 
        ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 
        1, -2, -2 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1552, 1553, 1788, 1793, 1794, 1796, 1797, 
    1809, 2121, 2123, 2135, 4579, 4582 ], supergroups := [ IntegerRing() | 363 
    ], name := "48G4", label := "G", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 12, 1 ],
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 5, 16, 4, 13 ],
        [ IntegerRing(48) | 13, 24, 12, 37 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 0, 6, 17 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 33, 16, 35, 33 ],
        [ IntegerRing(48) | 37, 16, 4, 29 ],
        [ IntegerRing(48) | 47, 0, 0, 47 ]
    ], cusps := [ IntegerRing() | 3, 3, 6, 6, 6, 48 ], c2 := [ IntegerRing() | 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 8 ], special_name := 
    [], special_name_html := [], direct_subgroups := [ IntegerRing() | 1552, 
    1553, 1788, 1793, 1794, 1796, 1797, 1809, 2121, 2123, 2135, 4579, 4582 ], 
    direct_supergroups := [ IntegerRing() | 363 ], length := 36, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13, 20 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 21 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 22 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 23 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 24 ],
        [ IntegerRing() | 384, 3, 2, 5, 13, 25 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 15 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 22 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 30 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 39 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 47 ],
        [ IntegerRing() | 432, 4, 4, 6, 26, 54 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 7 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 10 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 11 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 48 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 49 ],
        [ IntegerRing() | 480, 6, 5, 12, 30, 52 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 6 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 10 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 14 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 38 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 42 ],
        [ IntegerRing() | 576, 4, 3, 9, 21, 46 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 384, 3, 2, 5, 13 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 432, 4, 4, 6, 26 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 480, 6, 5, 12, 30 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ],
        [ IntegerRing() | 576, 4, 3, 9, 21 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, 
        1, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, 1, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2,
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 1, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, 
        -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -2, -2, -2 ]
    ], level := 48, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1557, 1798, 1799, 1800, 1810, 2124, 2125, 
    2126, 2136, 2433, 2435, 4283, 4284 ], supergroups := [ IntegerRing() | 252 
    ], name := "48H4", label := "H", order := 1024, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 24, 1 ],
        [ IntegerRing(48) | 1, 32, 32, 17 ],
        [ IntegerRing(48) | 3, 46, 23, 33 ],
        [ IntegerRing(48) | 5, 24, 24, 29 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 17, 0, 36, 17 ],
        [ IntegerRing(48) | 19, 38, 23, 41 ],
        [ IntegerRing(48) | 25, 0, 0, 25 ],
        [ IntegerRing(48) | 25, 0, 24, 25 ],
        [ IntegerRing(48) | 35, 24, 36, 11 ],
        [ IntegerRing(48) | 35, 38, 29, 37 ]
    ], cusps := [ IntegerRing() | 12, 12, 48 ], c2 := [ IntegerRing() | 1, 1, 1,
    1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 2, 2, 2, 4, 4, 4, 8, 8 ], special_name := [], 
    special_name_html := [], direct_subgroups := [ IntegerRing() | 1557, 1798, 
    1799, 1800, 1810, 2124, 2125, 2126, 2136, 2433, 2435, 4283, 4284 ], 
    direct_supergroups := [ IntegerRing() | 252 ], length := 36, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 9, 3 ],
        [ IntegerRing() | 384, 3, 2, 9, 9, 6 ],
        [ IntegerRing() | 384, 3, 2, 9, 9, 8 ],
        [ IntegerRing() | 384, 3, 2, 9, 9, 19 ],
        [ IntegerRing() | 384, 3, 2, 9, 9, 22 ],
        [ IntegerRing() | 384, 3, 2, 9, 9, 24 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 4 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 6 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 14 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 22 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 30 ],
        [ IntegerRing() | 432, 4, 4, 14, 7, 32 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 5 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 9 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 13 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 17 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 21 ],
        [ IntegerRing() | 480, 6, 5, 14, 12, 25 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 4 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 6 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 20 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 22 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 32 ],
        [ IntegerRing() | 576, 4, 3, 5, 13, 34 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 384, 3, 2, 9, 9 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 432, 4, 4, 14, 7 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 480, 6, 5, 14, 12 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ],
        [ IntegerRing() | 576, 4, 3, 5, 13 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, 
        -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        1, 1, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, 
        -2, -2, -2, 1, 1, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 
        1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2 ]
    ], level := 48, genus := 4, index := 96, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 7147 ], supergroups := [ IntegerRing() | 101,
    366 ], name := "48I4", label := "I", order := 768, GLZConj := 1, matgens := 
    [ PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 32, 32, 17 ],
        [ IntegerRing(48) | 13, 12, 0, 37 ],
        [ IntegerRing(48) | 17, 0, 0, 17 ],
        [ IntegerRing(48) | 25, 24, 0, 25 ],
        [ IntegerRing(48) | 31, 4, 28, 47 ],
        [ IntegerRing(48) | 33, 32, 16, 33 ],
        [ IntegerRing(48) | 37, 32, 20, 29 ],
        [ IntegerRing(48) | 41, 0, 24, 41 ],
        [ IntegerRing(48) | 41, 5, 1, 6 ]
    ], cusps := [ IntegerRing() | 48, 48 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ 
    IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 4, 4 ], special_name := [], special_name_html := [], 
    direct_subgroups := [ IntegerRing() | 7147 ], direct_supergroups := [ 
    IntegerRing() | 101, 366 ], length := 8, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 2, 5, 5, 5, 4 ],
        [ IntegerRing() | 384, 2, 5, 5, 5, 6 ],
        [ IntegerRing() | 384, 2, 5, 6, 3, 7 ],
        [ IntegerRing() | 432, 3, 6, 6, 6, 4 ],
        [ IntegerRing() | 432, 3, 6, 6, 6, 6 ],
        [ IntegerRing() | 432, 3, 6, 7, 5, 8 ],
        [ IntegerRing() | 480, 3, 8, 8, 8, 6 ],
        [ IntegerRing() | 480, 3, 8, 8, 8, 9 ],
        [ IntegerRing() | 480, 3, 8, 9, 6, 10 ],
        [ IntegerRing() | 576, 3, 6, 6, 6, 6 ],
        [ IntegerRing() | 576, 3, 6, 6, 6, 7 ],
        [ IntegerRing() | 576, 3, 6, 7, 4, 8 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 2, 5, 5, 5 ],
        [ IntegerRing() | 384, 2, 5, 5, 5 ],
        [ IntegerRing() | 384, 2, 5, 6, 3 ],
        [ IntegerRing() | 432, 3, 6, 6, 6 ],
        [ IntegerRing() | 432, 3, 6, 6, 6 ],
        [ IntegerRing() | 432, 3, 6, 7, 5 ],
        [ IntegerRing() | 480, 3, 8, 8, 8 ],
        [ IntegerRing() | 480, 3, 8, 8, 8 ],
        [ IntegerRing() | 480, 3, 8, 9, 6 ],
        [ IntegerRing() | 576, 3, 6, 6, 6 ],
        [ IntegerRing() | 576, 3, 6, 6, 6 ],
        [ IntegerRing() | 576, 3, 6, 7, 4 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 1, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 
        ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 
        1, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 1, 2, 2, 1, 1, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2,
        -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, 
        1, 1, -2, -2, 1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, -2,
        -2, -2, 1, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2,
        -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 1, 1, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2 ]
    ], level := 48, genus := 4, index := 96, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1566, 2510, 2511, 2705, 2706, 3996, 4285, 
    6270, 6271 ], supergroups := [ IntegerRing() | 100, 370 ], name := "48J4", 
    label := "J", order := 768, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(48)) |
        [ IntegerRing(48) | 1, 0, 32, 1 ],
        [ IntegerRing(48) | 1, 6, 42, 13 ],
        [ IntegerRing(48) | 1, 24, 24, 1 ],
        [ IntegerRing(48) | 7, 36, 12, 7 ],
        [ IntegerRing(48) | 13, 36, 12, 37 ],
        [ IntegerRing(48) | 17, 0, 16, 17 ],
        [ IntegerRing(48) | 22, 39, 21, 46 ],
        [ IntegerRing(48) | 25, 0, 0, 25 ],
        [ IntegerRing(48) | 37, 24, 24, 13 ]
    ], cusps := [ IntegerRing() | 2, 2, 2, 2, 6, 6, 6, 6, 16, 48 ], c2 := [ 
    IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 8, 8 ], special_name 
    := [], special_name_html := [], direct_subgroups := [ IntegerRing() | 1566, 
    2510, 2511, 2705, 2706, 3996, 4285, 6270, 6271 ], direct_supergroups := [ 
    IntegerRing() | 100, 370 ], length := 48, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 3, 7, 7, 7 ],
        [ IntegerRing() | 384, 1, 3, 7, 7, 13 ],
        [ IntegerRing() | 384, 4, 3, 6, 4, 1 ],
        [ IntegerRing() | 432, 2, 6, 10, 7, 7 ],
        [ IntegerRing() | 432, 2, 6, 10, 7, 13 ],
        [ IntegerRing() | 432, 5, 6, 7, 7, 2 ],
        [ IntegerRing() | 480, 4, 6, 9, 8, 8 ],
        [ IntegerRing() | 480, 4, 6, 9, 8, 19 ],
        [ IntegerRing() | 480, 7, 8, 6, 7, 3 ],
        [ IntegerRing() | 576, 2, 6, 9, 9, 9 ],
        [ IntegerRing() | 576, 2, 6, 9, 9, 19 ],
        [ IntegerRing() | 576, 5, 6, 4, 7, 2 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 384, 1, 3, 7, 7 ],
        [ IntegerRing() | 384, 1, 3, 7, 7 ],
        [ IntegerRing() | 384, 4, 3, 6, 4 ],
        [ IntegerRing() | 432, 2, 6, 10, 7 ],
        [ IntegerRing() | 432, 2, 6, 10, 7 ],
        [ IntegerRing() | 432, 5, 6, 7, 7 ],
        [ IntegerRing() | 480, 4, 6, 9, 8 ],
        [ IntegerRing() | 480, 4, 6, 9, 8 ],
        [ IntegerRing() | 480, 7, 8, 6, 7 ],
        [ IntegerRing() | 576, 2, 6, 9, 9 ],
        [ IntegerRing() | 576, 2, 6, 9, 9 ],
        [ IntegerRing() | 576, 5, 6, 4, 7 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, 
        -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 
        ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 
        2, 2, 2, 2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, 2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        1, -2, -2, 1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, 
        -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2,
        1, -2, -2, -2, -2, -2, -2, 1, 2, 1 ]
    ], level := 50, genus := 4, index := 60, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2151, 2285, 2998, 3112, 4433, 5151, 6022, 
    6173 ], supergroups := [ IntegerRing() | 70, 379 ], name := "50A4", label :=
    "A", order := 1500, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(50)) |
        [ IntegerRing(50) | 11, 30, 30, 41 ],
        [ IntegerRing(50) | 21, 20, 0, 31 ],
        [ IntegerRing(50) | 26, 25, 25, 1 ],
        [ IntegerRing(50) | 29, 30, 0, 19 ],
        [ IntegerRing(50) | 33, 8, 5, 27 ],
        [ IntegerRing(50) | 43, 26, 26, 39 ]
    ], cusps := [ IntegerRing() | 10, 50 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 4, 4, 4, 4, 20, 20 ], 
    special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 2151, 2285, 2998, 3112, 4433, 5151, 6022, 6173 ], 
    direct_supergroups := [ IntegerRing() | 70, 379 ], length := 30, treename :=
    [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 8, 8 ],
        [ IntegerRing() | 300, 2, 13, 7 ],
        [ IntegerRing() | 400, 2, 7, 7 ],
        [ IntegerRing() | 400, 2, 11, 7 ],
        [ IntegerRing() | 450, 3, 6, 8 ],
        [ IntegerRing() | 450, 3, 13, 6 ],
        [ IntegerRing() | 500, 2, 2, 7 ],
        [ IntegerRing() | 500, 2, 11, 7 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 8 ],
        [ IntegerRing() | 300, 2, 13 ],
        [ IntegerRing() | 400, 2, 7 ],
        [ IntegerRing() | 400, 2, 11 ],
        [ IntegerRing() | 450, 3, 6 ],
        [ IntegerRing() | 450, 3, 13 ],
        [ IntegerRing() | 500, 2, 2 ],
        [ IntegerRing() | 500, 2, 11 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 1, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 
        2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 1 ]
    ], level := 50, genus := 4, index := 60, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2152, 2286, 2999, 3113, 4434, 5152, 6023, 
    6173 ], supergroups := [ IntegerRing() | 70, 380 ], name := "50B4", label :=
    "B", order := 1500, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(50)) |
        [ IntegerRing(50) | 1, 25, 25, 26 ],
        [ IntegerRing(50) | 7, 48, 8, 5 ],
        [ IntegerRing(50) | 19, 6, 13, 41 ],
        [ IntegerRing(50) | 31, 0, 30, 21 ],
        [ IntegerRing(50) | 31, 40, 40, 21 ],
        [ IntegerRing(50) | 41, 16, 6, 17 ]
    ], cusps := [ IntegerRing() | 10, 50 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 4, 4, 4, 4, 20, 20 ], 
    special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 2152, 2286, 2999, 3113, 4434, 5152, 6023, 6173 ], 
    direct_supergroups := [ IntegerRing() | 70, 380 ], length := 30, treename :=
    [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 5, 8 ],
        [ IntegerRing() | 300, 2, 13, 6 ],
        [ IntegerRing() | 400, 2, 5, 7 ],
        [ IntegerRing() | 400, 2, 11, 5 ],
        [ IntegerRing() | 450, 3, 5, 8 ],
        [ IntegerRing() | 450, 3, 13, 8 ],
        [ IntegerRing() | 500, 2, 6, 7 ],
        [ IntegerRing() | 500, 2, 11, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 5 ],
        [ IntegerRing() | 300, 2, 13 ],
        [ IntegerRing() | 400, 2, 5 ],
        [ IntegerRing() | 400, 2, 11 ],
        [ IntegerRing() | 450, 3, 5 ],
        [ IntegerRing() | 450, 3, 13 ],
        [ IntegerRing() | 500, 2, 6 ],
        [ IntegerRing() | 500, 2, 11 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 1, -2, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, 1, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, -2, -2, 1, -2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2,
        -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 
        ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 1, -2, -2, -2, -2, -2, -2, 1, -2, 
        -2 ]
    ], level := 50, genus := 4, index := 60, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2153, 2287, 3000, 3114, 4435, 5153, 6024, 
    6173 ], supergroups := [ IntegerRing() | 70, 381 ], name := "50C4", label :=
    "C", order := 1500, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(50)) |
        [ IntegerRing(50) | 1, 25, 25, 26 ],
        [ IntegerRing(50) | 9, 4, 44, 3 ],
        [ IntegerRing(50) | 9, 20, 40, 39 ],
        [ IntegerRing(50) | 19, 38, 21, 21 ],
        [ IntegerRing(50) | 31, 30, 0, 21 ],
        [ IntegerRing(50) | 41, 20, 20, 11 ]
    ], cusps := [ IntegerRing() | 10, 50 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 4, 4, 4, 4, 20, 20 ], 
    special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 2153, 2287, 3000, 3114, 4435, 5153, 6024, 6173 ], 
    direct_supergroups := [ IntegerRing() | 70, 381 ], length := 30, treename :=
    [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 4, 9 ],
        [ IntegerRing() | 300, 2, 13, 4 ],
        [ IntegerRing() | 400, 2, 2, 7 ],
        [ IntegerRing() | 400, 2, 11, 2 ],
        [ IntegerRing() | 450, 3, 7, 9 ],
        [ IntegerRing() | 450, 3, 13, 3 ],
        [ IntegerRing() | 500, 2, 7, 7 ],
        [ IntegerRing() | 500, 2, 11, 6 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 4 ],
        [ IntegerRing() | 300, 2, 13 ],
        [ IntegerRing() | 400, 2, 2 ],
        [ IntegerRing() | 400, 2, 11 ],
        [ IntegerRing() | 450, 3, 7 ],
        [ IntegerRing() | 450, 3, 13 ],
        [ IntegerRing() | 500, 2, 7 ],
        [ IntegerRing() | 500, 2, 11 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 
        2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2,
        -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 
        2, 2, 2, 2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, 2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2,
        -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 
        ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, 
        -2, -2, -2, -2, -2, -2, -2, 1, 2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1 ]
    ], level := 50, genus := 4, index := 60, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2154, 2288, 3001, 3115, 4436, 5154, 6025, 
    6173 ], supergroups := [ IntegerRing() | 70, 382 ], name := "50D4", label :=
    "D", order := 1500, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(50)) |
        [ IntegerRing(50) | 26, 25, 25, 1 ],
        [ IntegerRing(50) | 29, 0, 30, 19 ],
        [ IntegerRing(50) | 37, 30, 17, 3 ],
        [ IntegerRing(50) | 41, 0, 40, 11 ],
        [ IntegerRing(50) | 41, 20, 20, 11 ],
        [ IntegerRing(50) | 49, 14, 34, 23 ]
    ], cusps := [ IntegerRing() | 10, 50 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 4, 4, 4, 4, 20, 20 ], 
    special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 2154, 2288, 3001, 3115, 4436, 5154, 6025, 6173 ], 
    direct_supergroups := [ IntegerRing() | 70, 382 ], length := 30, treename :=
    [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 7, 8 ],
        [ IntegerRing() | 300, 2, 13, 5 ],
        [ IntegerRing() | 400, 2, 3, 7 ],
        [ IntegerRing() | 400, 2, 11, 3 ],
        [ IntegerRing() | 450, 3, 4, 8 ],
        [ IntegerRing() | 450, 3, 13, 7 ],
        [ IntegerRing() | 500, 2, 3, 7 ],
        [ IntegerRing() | 500, 2, 11, 5 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 7 ],
        [ IntegerRing() | 300, 2, 13 ],
        [ IntegerRing() | 400, 2, 3 ],
        [ IntegerRing() | 400, 2, 11 ],
        [ IntegerRing() | 450, 3, 4 ],
        [ IntegerRing() | 450, 3, 13 ],
        [ IntegerRing() | 500, 2, 3 ],
        [ IntegerRing() | 500, 2, 11 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2,
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 
        2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, 1, 
        -2, -2, 1, -2, -2, 1 ]
    ], level := 50, genus := 4, index := 100, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2156, 2290, 4905, 7152, 7153, 7297 ], 
    supergroups := [ IntegerRing() | 72, 383 ], name := "50E4", label := "E", 
    order := 900, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(50)) |
        [ IntegerRing(50) | 1, 25, 25, 26 ],
        [ IntegerRing(50) | 28, 5, 21, 2 ],
        [ IntegerRing(50) | 31, 0, 10, 21 ],
        [ IntegerRing(50) | 39, 0, 30, 9 ],
        [ IntegerRing(50) | 41, 40, 40, 11 ],
        [ IntegerRing(50) | 49, 18, 18, 25 ]
    ], cusps := [ IntegerRing() | 50, 50 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 :=
    [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 2, 4, 4, 20, 20 ], special_name := [], special_name_html := 
    [], direct_subgroups := [ IntegerRing() | 2156, 2290, 4905, 7152, 7153, 7297
    ], direct_supergroups := [ IntegerRing() | 72, 383 ], length := 50, treename
    := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 1, 4, 9 ],
        [ IntegerRing() | 300, 1, 9, 4 ],
        [ IntegerRing() | 400, 1, 3, 6 ],
        [ IntegerRing() | 400, 1, 6, 3 ],
        [ IntegerRing() | 450, 2, 4, 9 ],
        [ IntegerRing() | 450, 2, 9, 4 ],
        [ IntegerRing() | 500, 1, 3, 6 ],
        [ IntegerRing() | 500, 1, 6, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 1, 4 ],
        [ IntegerRing() | 300, 1, 9 ],
        [ IntegerRing() | 400, 1, 3 ],
        [ IntegerRing() | 400, 1, 6 ],
        [ IntegerRing() | 450, 2, 4 ],
        [ IntegerRing() | 450, 2, 9 ],
        [ IntegerRing() | 500, 1, 3 ],
        [ IntegerRing() | 500, 1, 6 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, 
        -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2 
        ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2,
        1, -2, -2, 1, 2, 1 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 1, -2, -2, -2, -2, 
        1, -2, -2, 1, -2, -2, -2, -2, 1, -2, -2, 1, -2, -2, -2, -2 ],
        [ IntegerRing() | -1, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 
        -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, -1, -2, -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, -2, -2, -2, -2, 1, 
        2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 1, -2, -2, -2, -2, 1, -2, 
        -2, 1, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2 ]
    ], level := 50, genus := 4, index := 180, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 3367, 3587, 5941 ], supergroups := [ 
    IntegerRing() | 74, 114, 424 ], name := "50F4", label := "F", order := 500, 
    GLZConj := 1, matgens := [ PowerSequence(IntegerRing(50)) |
        [ IntegerRing(50) | 5, 32, 12, 47 ],
        [ IntegerRing(50) | 19, 40, 30, 29 ],
        [ IntegerRing(50) | 21, 10, 10, 31 ],
        [ IntegerRing(50) | 21, 20, 0, 31 ],
        [ IntegerRing(50) | 35, 22, 27, 17 ]
    ], cusps := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 25, 25, 50, 50 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3 ], gc := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 4, 4, 4 ], special_name :=
    [], special_name_html := [], direct_subgroups := [ IntegerRing() | 3367, 
    3587, 5941 ], direct_supergroups := [ IntegerRing() | 74, 114, 424 ], length
    := 18, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 6, 6, 10 ],
        [ IntegerRing() | 300, 2, 6, 7, 10 ],
        [ IntegerRing() | 300, 2, 10, 14, 6 ],
        [ IntegerRing() | 400, 2, 6, 4, 7 ],
        [ IntegerRing() | 400, 2, 6, 5, 8 ],
        [ IntegerRing() | 400, 2, 8, 7, 4 ],
        [ IntegerRing() | 450, 3, 8, 6, 7 ],
        [ IntegerRing() | 450, 3, 8, 7, 10 ],
        [ IntegerRing() | 450, 3, 10, 11, 5 ],
        [ IntegerRing() | 500, 2, 5, 9, 10 ],
        [ IntegerRing() | 500, 2, 5, 12, 33 ],
        [ IntegerRing() | 500, 2, 8, 11, 6 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 300, 2, 6, 6 ],
        [ IntegerRing() | 300, 2, 6, 7 ],
        [ IntegerRing() | 300, 2, 10, 14 ],
        [ IntegerRing() | 400, 2, 6, 4 ],
        [ IntegerRing() | 400, 2, 6, 5 ],
        [ IntegerRing() | 400, 2, 8, 7 ],
        [ IntegerRing() | 450, 3, 8, 6 ],
        [ IntegerRing() | 450, 3, 8, 7 ],
        [ IntegerRing() | 450, 3, 10, 11 ],
        [ IntegerRing() | 500, 2, 5, 9 ],
        [ IntegerRing() | 500, 2, 5, 12 ],
        [ IntegerRing() | 500, 2, 8, 11 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, -1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, -1, 2, 2, 1, -2, -2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
        2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 
        2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
        1, 1 ]
    ], level := 52, genus := 4, index := 84, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2159, 2160, 2294, 2442, 2711, 2864, 4586, 
    4587, 7727 ], supergroups := [ IntegerRing() | 3, 385 ], name := "52A4", 
    label := "A", order := 1248, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(52)) |
        [ IntegerRing(52) | 1, 0, 13, 1 ],
        [ IntegerRing(52) | 1, 0, 26, 1 ],
        [ IntegerRing(52) | 1, 32, 32, 37 ],
        [ IntegerRing(52) | 25, 0, 0, 25 ],
        [ IntegerRing(52) | 27, 0, 26, 27 ],
        [ IntegerRing(52) | 29, 6, 20, 49 ],
        [ IntegerRing(52) | 45, 24, 32, 9 ]
    ], cusps := [ IntegerRing() | 1, 1, 4, 13, 13, 52 ], c2 := [ IntegerRing() |
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ 
    IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 12, 12, 
    12 ], special_name := [], special_name_html := [], direct_subgroups := [ 
    IntegerRing() | 2159, 2160, 2294, 2442, 2711, 2864, 4586, 4587, 7727 ], 
    direct_supergroups := [ IntegerRing() | 385 ], length := 42, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 312, 4, 8, 10 ],
        [ IntegerRing() | 364, 4, 7, 7 ],
        [ IntegerRing() | 416, 4, 4, 4 ],
        [ IntegerRing() | 468, 4, 9, 14 ],
        [ IntegerRing() | 520, 4, 7, 11 ],
        [ IntegerRing() | 572, 4, 8, 8 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 312, 4, 8 ],
        [ IntegerRing() | 300, 7 ],
        [ IntegerRing() | 364, 4, 7 ],
        [ IntegerRing() | 416, 4, 4 ],
        [ IntegerRing() | 468, 4, 9 ],
        [ IntegerRing() | 520, 4, 7 ],
        [ IntegerRing() | 572, 4, 8 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 
        1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 
        1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1,
        2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 
        1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2, 1, 1, 2, 1, 1, 2,
        2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 
        1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2,
        1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 
        1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 
        1, -2, -2, -1, -2, -2, -2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 
        2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 
        1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2, 1, 1, 2, 1, 1, 2, 2, 1, 1,
        2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 
        2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2, 1, -2, 
        1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 
        1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 
        1, -2, -2, -1, -2 ],
        [ IntegerRing() | 2, 1, 2, 2, -1, -2, -2, -1, -2, -2, -1, -1, -1, -1, 
        -1, -1, -1, -1, -2, -2, -2, -1, -1, -1, -2, -2, -1, -1, -1, -1, -1, -1, 
        -1, -2, -1, -1, -2, -2, -1, -2, -2, -1, -2, -2, -1, -1, -2, -2, -1, -1, 
        -2, -1, -1, 2, 1, 2, 2, -1, -2, -2, -1, -2, -2, -1, -1, -1, -1, -1, -1, 
        -1, -1, -2, -2, -2, -1, -1, -1, -2, -2, -1, -1, -1, -1, -1, -1, -1, -2, 
        -1, -1, -2, -2, -1, -2, -2, -1, -2, -2, -1, -1, -2, -2, -1, -1, -2, -1, 
        -1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
        1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 
        1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1,
        2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 
        1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2 ],
        [ IntegerRing() | 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 
        1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 
        1, 2, 2, 1, 2, 2, 1, -2, -2, -1, -2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1,
        2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 
        1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, 1, 2, 1, 1, 2, 2, 1, 1, 
        2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 
        2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, -2, -1, 2, 1, 1, 2, 
        1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 
        2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, -2, 
        -2, -1, -2, -1, 2, 2 ]
    ], level := 53, genus := 4, index := 54, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1817, 1894, 2297, 3065, 3125, 5248, 5292, 
    7349 ], supergroups := [ IntegerRing() | 1 ], name := "53A4", label := "A", 
    order := 2756, GLZConj := 1, matgens := [ PowerSequence(IntegerRing(53)) |
        [ IntegerRing(53) | 1, 11, 48, 52 ],
        [ IntegerRing(53) | 20, 16, 42, 31 ],
        [ IntegerRing(53) | 45, 27, 7, 16 ],
        [ IntegerRing(53) | 52, 0, 0, 52 ]
    ], cusps := [ IntegerRing() | 1, 53 ], c2 := [ IntegerRing() | 1, 1, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3
    := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ],
    gc := [ IntegerRing() | 1, 1, 52 ], special_name := [ Strings() | 
    "\overline\Gamma_0(53)" ], special_name_html := [ Strings() | 
    "&Gamma;<sub>0</sub>(53)" ], direct_subgroups := [ IntegerRing() | 1817, 
    1894, 2297, 3065, 3125, 5248, 5292, 7349 ], direct_supergroups := [ 
    IntegerRing() | 1 ], length := 54, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 318, 3 ],
        [ IntegerRing() | 371, 3 ],
        [ IntegerRing() | 424, 3 ],
        [ IntegerRing() | 477, 3 ],
        [ IntegerRing() | 530, 3 ],
        [ IntegerRing() | 583, 3 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ],
        [ IntegerRing() | 0 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 
        2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
        2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ],
        [ IntegerRing() | 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1 ]
    ], level := 54, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2443, 2444, 2447, 2515, 3376, 3377, 3382, 
    3390, 3665, 3666, 4589, 4590, 4591, 4592, 5950 ], supergroups := [ 
    IntegerRing() | 222, 262 ], name := "54A4", label := "A", order := 1458, 
    GLZConj := 1, matgens := [ PowerSequence(IntegerRing(54)) |
        [ IntegerRing(54) | 1, 0, 18, 1 ],
        [ IntegerRing(54) | 7, 18, 46, 49 ],
        [ IntegerRing(54) | 17, 0, 30, 35 ],
        [ IntegerRing(54) | 19, 0, 42, 37 ],
        [ IntegerRing(54) | 25, 0, 26, 13 ],
        [ IntegerRing(54) | 28, 27, 27, 1 ],
        [ IntegerRing(54) | 37, 0, 0, 19 ],
        [ IntegerRing(54) | 37, 0, 6, 19 ]
    ], cusps := [ IntegerRing() | 2, 2, 2, 6, 6, 54 ], c2 := [ IntegerRing() | 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 2, 2, 6 ], special_name := [], special_name_html := 
    [], direct_subgroups := [ IntegerRing() | 2443, 2444, 2447, 2515, 3376, 
    3377, 3382, 3390, 3665, 3666, 4589, 4590, 4591, 4592, 5950 ], 
    direct_supergroups := [ IntegerRing() | 222, 262 ], length := 12, treename 
    := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 3, 6, 17 ],
        [ IntegerRing() | 324, 2, 3, 16, 5 ],
        [ IntegerRing() | 324, 2, 3, 16, 20 ],
        [ IntegerRing() | 324, 2, 3, 16, 22 ],
        [ IntegerRing() | 432, 2, 5, 5, 7 ],
        [ IntegerRing() | 432, 2, 5, 17, 34 ],
        [ IntegerRing() | 432, 2, 5, 17, 35 ],
        [ IntegerRing() | 432, 2, 5, 17, 39 ],
        [ IntegerRing() | 486, 2, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15, 12 ],
        [ IntegerRing() | 486, 2, 2, 15, 13 ],
        [ IntegerRing() | 486, 2, 2, 15, 20 ],
        [ IntegerRing() | 540, 4, 6, 5, 12 ],
        [ IntegerRing() | 540, 4, 6, 20, 10 ],
        [ IntegerRing() | 540, 4, 6, 20, 11 ],
        [ IntegerRing() | 540, 4, 6, 20, 16 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 3, 6 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 432, 2, 5, 5 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 486, 2, 2, 2 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 540, 4, 6, 5 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 
        2, 2, 2, 1, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 
        2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, 1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
        2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ],
        [ IntegerRing() | 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ]
    ], level := 54, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1895, 2445, 3388, 3392, 4440, 4443, 4444, 
    4449, 6860 ], supergroups := [ IntegerRing() | 105, 388 ], name := "54B4", 
    label := "B", order := 1458, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(54)) |
        [ IntegerRing(54) | 1, 0, 18, 1 ],
        [ IntegerRing(54) | 13, 12, 26, 49 ],
        [ IntegerRing(54) | 17, 0, 18, 35 ],
        [ IntegerRing(54) | 19, 0, 0, 37 ],
        [ IntegerRing(54) | 28, 27, 27, 1 ],
        [ IntegerRing(54) | 37, 0, 36, 19 ],
        [ IntegerRing(54) | 37, 18, 42, 19 ],
        [ IntegerRing(54) | 43, 0, 30, 49 ]
    ], cusps := [ IntegerRing() | 18, 54 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 1, 1, 2, 2, 6 ], special_name := [], special_name_html := 
    [], direct_subgroups := [ IntegerRing() | 1895, 2445, 3388, 3392, 4440, 
    4443, 4444, 4449, 6860 ], direct_supergroups := [ IntegerRing() | 105, 388 
    ], length := 12, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 4, 5, 8 ],
        [ IntegerRing() | 324, 2, 4, 16, 34 ],
        [ IntegerRing() | 324, 2, 4, 16, 36 ],
        [ IntegerRing() | 324, 2, 4, 16, 41 ],
        [ IntegerRing() | 432, 2, 2, 5, 8 ],
        [ IntegerRing() | 432, 2, 2, 16, 2 ],
        [ IntegerRing() | 432, 2, 2, 16, 7 ],
        [ IntegerRing() | 432, 2, 2, 16, 23 ],
        [ IntegerRing() | 486, 2, 3, 4, 7 ],
        [ IntegerRing() | 486, 2, 3, 15, 6 ],
        [ IntegerRing() | 486, 2, 3, 15, 8 ],
        [ IntegerRing() | 486, 2, 3, 15, 25 ],
        [ IntegerRing() | 540, 4, 5, 11, 10 ],
        [ IntegerRing() | 540, 4, 5, 19, 11 ],
        [ IntegerRing() | 540, 4, 5, 19, 28 ],
        [ IntegerRing() | 540, 4, 5, 19, 37 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 4, 5 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 432, 2, 2, 5 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 486, 2, 3, 4 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 540, 4, 5, 11 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        1, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 
        1 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ]
    ], level := 54, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2443, 2446, 2450, 2516, 3379, 3380, 3381, 
    3383, 3385, 3390, 5952 ], supergroups := [ IntegerRing() | 222 ], name := 
    "54C4", label := "C", order := 1458, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(54)) |
        [ IntegerRing(54) | 1, 0, 36, 1 ],
        [ IntegerRing(54) | 13, 0, 16, 25 ],
        [ IntegerRing(54) | 19, 0, 12, 37 ],
        [ IntegerRing(54) | 31, 45, 19, 52 ],
        [ IntegerRing(54) | 37, 0, 0, 19 ],
        [ IntegerRing(54) | 40, 45, 35, 7 ],
        [ IntegerRing(54) | 53, 0, 0, 53 ]
    ], cusps := [ IntegerRing() | 2, 2, 2, 6, 6, 54 ], c2 := [ IntegerRing() | 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 2, 2, 2, 2, 2, 2, 6, 6 ], special_name := [], 
    special_name_html := [], direct_subgroups := [ IntegerRing() | 2443, 2446, 
    2450, 2516, 3379, 3380, 3381, 3383, 3385, 3390, 5952 ], direct_supergroups 
    := [ IntegerRing() | 222 ], length := 24, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 3, 16, 12 ],
        [ IntegerRing() | 324, 2, 3, 16, 13 ],
        [ IntegerRing() | 324, 2, 3, 16, 18 ],
        [ IntegerRing() | 324, 2, 3, 16, 30 ],
        [ IntegerRing() | 324, 2, 3, 16, 35 ],
        [ IntegerRing() | 324, 2, 3, 16, 37 ],
        [ IntegerRing() | 432, 2, 5, 17, 5 ],
        [ IntegerRing() | 432, 2, 5, 17, 6 ],
        [ IntegerRing() | 432, 2, 5, 17, 17 ],
        [ IntegerRing() | 432, 2, 5, 17, 18 ],
        [ IntegerRing() | 432, 2, 5, 17, 24 ],
        [ IntegerRing() | 432, 2, 5, 17, 27 ],
        [ IntegerRing() | 486, 2, 2, 15, 6 ],
        [ IntegerRing() | 486, 2, 2, 15, 7 ],
        [ IntegerRing() | 486, 2, 2, 15, 11 ],
        [ IntegerRing() | 486, 2, 2, 15, 29 ],
        [ IntegerRing() | 486, 2, 2, 15, 30 ],
        [ IntegerRing() | 486, 2, 2, 15, 31 ],
        [ IntegerRing() | 540, 4, 6, 20, 18 ],
        [ IntegerRing() | 540, 4, 6, 20, 22 ],
        [ IntegerRing() | 540, 4, 6, 20, 25 ],
        [ IntegerRing() | 540, 4, 6, 20, 33 ],
        [ IntegerRing() | 540, 4, 6, 20, 35 ],
        [ IntegerRing() | 540, 4, 6, 20, 39 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 324, 2, 3, 16 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 432, 2, 5, 17 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 486, 2, 2, 15 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ],
        [ IntegerRing() | 540, 4, 6, 20 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2,
        2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -1, 2, 2, 1, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 
        2, 2, 2, 2, 2, 2, 2, 2 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -1 ]
    ], level := 54, genus := 4, index := 72, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1896, 2448, 3386, 3391, 3392, 4443, 4446, 
    4447, 4448, 4450, 6862 ], supergroups := [ IntegerRing() | 105 ], name := 
    "54D4", label := "D", order := 1458, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(54)) |
        [ IntegerRing(54) | 1, 0, 18, 1 ],
        [ IntegerRing(54) | 19, 0, 18, 37 ],
        [ IntegerRing(54) | 25, 42, 52, 1 ],
        [ IntegerRing(54) | 28, 45, 9, 1 ],
        [ IntegerRing(54) | 34, 27, 15, 31 ],
        [ IntegerRing(54) | 37, 0, 36, 19 ],
        [ IntegerRing(54) | 37, 18, 24, 19 ],
        [ IntegerRing(54) | 53, 0, 0, 53 ]
    ], cusps := [ IntegerRing() | 18, 54 ], c2 := [ IntegerRing() | 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ 
    IntegerRing() | 2, 2, 2, 2, 2, 2, 6, 6 ], special_name := [], 
    special_name_html := [], direct_subgroups := [ IntegerRing() | 1896, 2448, 
    3386, 3391, 3392, 4443, 4446, 4447, 4448, 4450, 6862 ], direct_supergroups 
    := [ IntegerRing() | 105 ], length := 24, treename := [ 
        PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 4, 16, 2 ],
        [ IntegerRing() | 324, 2, 4, 16, 6 ],
        [ IntegerRing() | 324, 2, 4, 16, 7 ],
        [ IntegerRing() | 324, 2, 4, 16, 17 ],
        [ IntegerRing() | 324, 2, 4, 16, 19 ],
        [ IntegerRing() | 324, 2, 4, 16, 26 ],
        [ IntegerRing() | 432, 2, 2, 16, 19 ],
        [ IntegerRing() | 432, 2, 2, 16, 25 ],
        [ IntegerRing() | 432, 2, 2, 16, 26 ],
        [ IntegerRing() | 432, 2, 2, 16, 36 ],
        [ IntegerRing() | 432, 2, 2, 16, 40 ],
        [ IntegerRing() | 432, 2, 2, 16, 41 ],
        [ IntegerRing() | 486, 2, 3, 15, 13 ],
        [ IntegerRing() | 486, 2, 3, 15, 14 ],
        [ IntegerRing() | 486, 2, 3, 15, 21 ],
        [ IntegerRing() | 486, 2, 3, 15, 31 ],
        [ IntegerRing() | 486, 2, 3, 15, 32 ],
        [ IntegerRing() | 486, 2, 3, 15, 40 ],
        [ IntegerRing() | 540, 4, 5, 19, 5 ],
        [ IntegerRing() | 540, 4, 5, 19, 8 ],
        [ IntegerRing() | 540, 4, 5, 19, 14 ],
        [ IntegerRing() | 540, 4, 5, 19, 31 ],
        [ IntegerRing() | 540, 4, 5, 19, 34 ],
        [ IntegerRing() | 540, 4, 5, 19, 40 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 324, 2, 4, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 432, 2, 2, 16 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 486, 2, 3, 15 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ],
        [ IntegerRing() | 540, 4, 5, 19 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 
        2, 2, 2, 2, 2 ],
        [ IntegerRing() | 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, 1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1 ],
        [ IntegerRing() | 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, 2, 2, 2, 2, 
        2, 2, -1 ],
        [ IntegerRing() | 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1,
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, 
        -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, 
        -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1, 2, 2, 1, 2,
        2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, 2, 2, 1,
        2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -1, 2, 2, 1, 2, 2, 1, 2, 2, -1, -2, -2, -2, -2, -2, -2, 1, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 
        -2, -2, -2, -2, -2, -2, -2, -2, -2, -1 ]
    ], level := 54, genus := 4, index := 108, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 2443, 2451, 2520, 3598, 4456, 4457, 4593, 
    7298, 7299 ], supergroups := [ IntegerRing() | 108, 262 ], name := "54E4", 
    label := "E", order := 972, GLZConj := 1, matgens := [ 
        PowerSequence(IntegerRing(54)) |
        [ IntegerRing(54) | 1, 0, 18, 1 ],
        [ IntegerRing(54) | 1, 0, 27, 1 ],
        [ IntegerRing(54) | 7, 18, 46, 49 ],
        [ IntegerRing(54) | 17, 0, 30, 35 ],
        [ IntegerRing(54) | 19, 0, 42, 37 ],
        [ IntegerRing(54) | 25, 0, 26, 13 ],
        [ IntegerRing(54) | 37, 0, 0, 19 ],
        [ IntegerRing(54) | 37, 0, 6, 19 ]
    ], cusps := [ IntegerRing() | 1, 1, 1, 2, 2, 2, 3, 3, 6, 6, 27, 54 ], c2 := 
    [ IntegerRing() | 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3 ], gc := [ IntegerRing() | 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 6,
    6, 6 ], special_name := [ Strings() | "\overline\Gamma_0(54)" ], 
    special_name_html := [ Strings() | "&Gamma;<sub>0</sub>(54)" ], 
    direct_subgroups := [ IntegerRing() | 2443, 2451, 2520, 3598, 4456, 4457, 
    4593, 7298, 7299 ], direct_supergroups := [ IntegerRing() | 108, 262 ], 
    length := 36, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 3, 6, 15 ],
        [ IntegerRing() | 324, 2, 3, 15, 3 ],
        [ IntegerRing() | 324, 2, 3, 15, 8 ],
        [ IntegerRing() | 324, 2, 3, 15, 10 ],
        [ IntegerRing() | 432, 2, 5, 5, 6 ],
        [ IntegerRing() | 432, 2, 5, 15, 3 ],
        [ IntegerRing() | 432, 2, 5, 15, 4 ],
        [ IntegerRing() | 432, 2, 5, 15, 5 ],
        [ IntegerRing() | 486, 2, 2, 2, 14 ],
        [ IntegerRing() | 486, 2, 2, 14, 3 ],
        [ IntegerRing() | 486, 2, 2, 14, 7 ],
        [ IntegerRing() | 486, 2, 2, 14, 8 ],
        [ IntegerRing() | 540, 4, 6, 5, 9 ],
        [ IntegerRing() | 540, 4, 6, 18, 6 ],
        [ IntegerRing() | 540, 4, 6, 18, 9 ],
        [ IntegerRing() | 540, 4, 6, 18, 11 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 324, 2, 3, 6 ],
        [ IntegerRing() | 324, 2, 3, 15 ],
        [ IntegerRing() | 324, 2, 3, 15 ],
        [ IntegerRing() | 324, 2, 3, 15 ],
        [ IntegerRing() | 432, 2, 5, 5 ],
        [ IntegerRing() | 432, 2, 5, 15 ],
        [ IntegerRing() | 432, 2, 5, 15 ],
        [ IntegerRing() | 432, 2, 5, 15 ],
        [ IntegerRing() | 486, 2, 2, 2 ],
        [ IntegerRing() | 486, 2, 2, 14 ],
        [ IntegerRing() | 486, 2, 2, 14 ],
        [ IntegerRing() | 486, 2, 2, 14 ],
        [ IntegerRing() | 540, 4, 6, 5 ],
        [ IntegerRing() | 540, 4, 6, 18 ],
        [ IntegerRing() | 540, 4, 6, 18 ],
        [ IntegerRing() | 540, 4, 6, 18 ]
    ]>,
    rec<recformat<generators: SeqEnum, level: IntegerRing(), genus: 
    IntegerRing(), index: IntegerRing(), contains_minus_one: BoolElt, subgroups:
    SeqEnum, supergroups: SeqEnum, name: MonStgElt, label: MonStgElt, order: 
    IntegerRing(), GLZConj: IntegerRing(), matgens: SeqEnum, cusps: SeqEnum, c2:
    SeqEnum, c3: SeqEnum, gc: SeqEnum, projections: SeqEnum, special_name: 
    SeqEnum, special_name_html: SeqEnum, direct_subgroups: SeqEnum, 
    direct_supergroups: SeqEnum, length: IntegerRing(), treename: SeqEnum, 
    treesupergroups: SeqEnum> | generators := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 1, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, -2, -2, -1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 
        2, 2, 1, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 
        1, 1 ],
        [ IntegerRing() | 1, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, -1,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, -2, -2, 1 ],
        [ IntegerRing() | -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, -2, -2, -1 ]
    ], level := 55, genus := 4, index := 66, contains_minus_one := true, 
    subgroups := [ IntegerRing() | 1898, 2452, 2874, 3127, 3802, 6114, 6984, 
    7167, 7924, 8071 ], supergroups := [ IntegerRing() | 17, 76 ], name := 
    "55A4", label := "A", order := 2400, GLZConj := 2, matgens := [ 
        PowerSequence(IntegerRing(55)) |
        [ IntegerRing(55) | 12, 0, 0, 23 ],
        [ IntegerRing(55) | 33, 31, 50, 32 ],
        [ IntegerRing(55) | 34, 0, 0, 34 ],
        [ IntegerRing(55) | 34, 22, 0, 34 ],
        [ IntegerRing(55) | 47, 24, 50, 8 ],
        [ IntegerRing(55) | 54, 0, 0, 54 ]
    ], cusps := [ IntegerRing() | 11, 55 ], c2 := [ IntegerRing() | 1, 1, 1, 1, 
    1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2 ], c3 := [ IntegerRing() | 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ], gc := [ IntegerRing() | 2, 2, 8, 10, 
    10, 10, 10, 40, 40 ], special_name := [], special_name_html := [], 
    direct_subgroups := [ IntegerRing() | 1898, 2452, 2874, 3127, 3802, 6114, 
    6984, 7167, 7924, 8071 ], direct_supergroups := [ IntegerRing() | 17, 76 ], 
    length := 66, treename := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 330, 3, 6 ],
        [ IntegerRing() | 385, 3, 7 ],
        [ IntegerRing() | 440, 3, 6 ],
        [ IntegerRing() | 495, 3, 7 ],
        [ IntegerRing() | 550, 3, 5 ]
    ], treesupergroups := [ PowerSequence(IntegerRing()) |
        [ IntegerRing() | 330, 3 ],
        [ IntegerRing() | 300, 2 ],
        [ IntegerRing() | 385, 3 ],
        [ IntegerRing() | 440, 3 ],
        [ IntegerRing() | 495, 3 ],
        [ IntegerRing() | 550, 3 ]
    ]>
]
;
